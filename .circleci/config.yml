version: 2.1
commands:
  restore_npm:
    steps:
      - restore_cache:
          name: Restore npm dependencies
          key: npm-{{ checksum "package.json" }}
  save_npm:
    steps:
      - save_cache:
          name: Cache npm dependencies
          key: npm-{{ checksum "package.json" }}
          paths:
            - ~/workspace/node_modules
jobs:
  setup_and_test:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch-browsers
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 1
        command: mysqld --lower_case_table_names=1
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.2
        environment:
          - discovery.type=single-node
          - xpack.security.enabled=false
          - ES_JAVA_OPTS=-Xms750m -Xmx750m
        entrypoint: >
          bash -c "elasticsearch-plugin install analysis-kuromoji && docker-entrypoint.sh"
    environment:
      - JVM_OPTS: -Xmx3200m
      - GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: setup db and elasticsearch schema
          command: |
            sudo apt update
            sudo apt install -y mysql-client
            sh ./tools/setup_v4db.sh
            sh ./docker/elasticsearch/init/create_schema.sh "${ENV_SERVER_LOCAL_IP:-127.0.0.1}"
            ./gradlew generateTablesJooqSchemaSource -Pjdbc.url=jdbc:mysql://localhost:3306
      - run:
          name: test_and_run_backend
          command: |
            ./gradlew test -Pspring.profiles.active=test --info
workflows:
  version: 2.1
  workflow:
    jobs:
      - setup_and_test:
